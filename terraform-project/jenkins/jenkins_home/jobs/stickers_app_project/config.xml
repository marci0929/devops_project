<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1468.vcf4f5ee92395">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>This is the stickers app project</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3996.va_f5c1799f978">
    <script>pipeline {
    agent any

    tools {
        nodejs &apos;NODEJS_23&apos;
        terraform &apos;TF_DEFAULT&apos;
    }

    environment {
        GITHUB_REPO = &apos;https://github.com/marci0929/devops_project.git&apos;
        BRANCH = &apos;master&apos;
        DEPLOY_CONTAINER = &apos;stickers-app&apos;
    }

    stages {
        stage(&apos;Checkout&apos;) {
            steps {
                sh &apos;mkdir -p app&apos;
                sh &apos;cd app&apos;
                sh &apos;rm -rf *&apos;
                git branch: env.BRANCH, url: env.GITHUB_REPO
            }
        }
        
        stage(&apos;Test build&apos;){
            steps {
                sh &apos;npm install -g @angular/cli&apos;
                sh &apos;npm install&apos;
                sh &apos;ng build&apos;
            }
        }

        stage(&apos;Deploy&apos;) {
            steps {
                echo &apos;Refreshing the application...&apos;
                dir(&apos;terraform-project&apos;) {
                    sh &apos;terraform init -no-color&apos;
                    sh &apos;docker stop $(docker ps --filter name=stickers-app -q)&apos;
                    sh &apos;terraform apply -auto-approve -no-color&apos;
                }
            }
        }
    }
    

    post {
        success {
            echo &apos;Application is running!&apos;
        }
        failure {
            echo &apos;Errors happened during deployment!&apos;
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>